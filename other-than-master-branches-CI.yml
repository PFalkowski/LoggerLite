variables:
  BuildConfiguration: 'Debug'
  BuildPlatform: 'Any CPU'
  Solution: '**\*.sln'

trigger:
  branches:
    include:
    - *
    exclude:
    - master
  paths:
    exclude: 
    - 'README.md'
    - '*.png'
    - '*.txt'

pool:
  name: Hosted VS2017
  demands:
  - msbuild
  - visualstudio
  - vstest

steps:
- task: NuGetToolInstaller@0
  displayName: 'Use NuGet'
  inputs:
    versionSpec: 4.4.1

- task: DotNetCoreCLI@2
  displayName: 'NuGet Restore'
  inputs:
    command: 'restore'
    solution: $(Solution)

- task: VSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: $(Solution)
    platform: $(BuildPlatform)
    configuration: $(BuildConfiguration)
    maximumCpuCount: true

- task: VSTest@2
  displayName: 'Test Assemblies'
  inputs:
    testAssemblyVer2: |
     **\*test*(s).dll
     !**\obj\**
    runInParallel: true
    runTestsInIsolation: false
    codeCoverageEnabled: true
    coverletOutputFormat: opencover
    platform: $(BuildPlatform)
    configuration: $(BuildConfiguration)

# Upload coverage to codecov.io. See https://medium.com/@alexsalisbury/getting-codecov-io-working-in-azure-pipelines-d49b884f9aed for ref.
- script: | 
    %USERPROFILE%\.nuget\packages\codecov\1.3.0\tools\codecov.exe -f ".\LoggerLite.xTest\TestResults\coverage.opencover.xml" -t $(CODECOV_TOKEN)
  displayName: 'Upload coverage to codecov.io'
  failOnStderr: false
  
- task: PublishBuildArtifacts@1
  condition: succeededOrFailed()
  inputs:
    pathtoPublish: '.\'
    artifactName: drop